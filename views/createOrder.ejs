<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>حجز طلب – Kobe Land</title>
  <!-- SweetAlert2 for alerts -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    :root {
      /* Colors */
      --primary-color: #1D1D1F;
      --secondary-color: #0071E3;
      --white-color: #FFF;
      --light-bg: #F8F9FA;
      /* Spacing */
      --gutter: 1.5rem;
      --section-padding: 2rem;
      /* Border radius & shadows */
      --radius: 10px;
      --card-shadow: 0 10px 30px rgba(0,0,0,0.1);
      /* Transition */
      --transition: all .3s ease;
    }

    /* RESET & BASE */
    *, *::before, *::after {
      box-sizing: border-box;
      margin: 0; padding: 0;
    }
    body {
      font-family: 'Segoe UI', Tahoma, sans-serif;
      background: var(--white-color);
      color: #333;
      line-height: 1.6;
    }
    img {
      display: block;
      max-width: 100%;
      height: auto;
    }

    /* BOOKING SECTION */
    .booking-section {
      background: var(--light-bg);
      padding: var(--section-padding) var(--gutter);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-top: 4rem;
    }
    .booking-container {
      background: var(--white-color);
      border-radius: calc(var(--radius) * 2);
      box-shadow: var(--card-shadow);
      overflow: hidden;
      width: 100%;
      max-width: 800px;
      margin: 0 auto;
    }

    /* HEADER */
    .booking-header {
      background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
      padding: var(--section-padding);
      text-align: center;
      color: var(--white-color);
    }
    .booking-header h2 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: .5rem;
    }
    .booking-header p {
      font-size: 1rem;
      opacity: .85;
    }

    /* FORM */
    .booking-form {
      padding: var(--section-padding);
      display: flex;
      flex-direction: column;
      gap: var(--gutter);
    }
    .form-group {
      position: relative;
      margin-bottom: var(--gutter);
    }
    .form-label {
      display: block;
      margin-bottom: .5rem;
      font-weight: 500;
      color: #555;
    }
    .form-control {
      width: 100%;
      padding: calc(var(--gutter) * .66);
      border: 2px solid #E0E0E0;
      border-radius: var(--radius);
      font-size: 1rem;
      transition: var(--transition);
    }
    .form-control:focus {
      border-color: var(--secondary-color);
      box-shadow: 0 0 0 3px rgba(0,113,227,0.1);
      outline: none;
    }

    /* Floating Labels */
    .floating-label-group {
      margin-top: var(--gutter);
    }
    .floating-label {
      position: absolute;
      right: var(--gutter);
      top: 50%;
      transform: translateY(-50%);
      background: var(--white-color);
      padding: 0 .25rem;
      color: #888;
      pointer-events: none;
      transition: var(--transition);
    }
    .form-control:focus + .floating-label,
    .form-control:not(:placeholder-shown) + .floating-label {
      top: 0;
      font-size: .9rem;
      color: var(--secondary-color);
    }

    /* Select */
    .select-wrapper {
      position: relative;
    }
    .select-wrapper::after {
      content: "⌵";
      position: absolute;
      top: 50%;
      left: var(--gutter);
      transform: translateY(-50%);
      color: var(--secondary-color);
      pointer-events: none;
      font-size: 1.2rem;
    }
    select.form-control {
      appearance: none;
      padding-right: calc(var(--gutter) * 1.5);
    }

    /* Phone */
    .phone-input-group {
      display: flex;
      gap: .5rem;
    }
    .country-code {
      background: #F1F1F1;
      padding: calc(var(--gutter) * .66);
      border-radius: var(--radius);
      font-weight: 500;
      min-width: 4rem;
      text-align: center;
    }
    textarea.form-control {
      height: 120px;
      resize: vertical;
    }

    /* File Upload */
    .file-section {
      border: 2px dashed #E0E0E0;
      border-radius: var(--radius);
      padding: var(--section-padding);
      transition: var(--transition);
      position: relative;
    }
    .file-section:hover {
      border-color: var(--secondary-color);
      background: rgba(0,113,227,0.03);
    }
    .file-input-label {
      display: flex;
      flex-direction: column;
      align-items: center;
      cursor: pointer;
      color: #555;
      gap: .5rem;
    }
    .upload-icon {
      font-size: 2.5rem;
      color: var(--secondary-color);
    }
    .preview-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: .75rem;
      margin-top: var(--gutter);
    }
    .preview-item {
      position: relative;
      border-radius: var(--radius);
      overflow: hidden;
      box-shadow: 0 3px 10px rgba(0,0,0,0.1);
      transition: transform .3s ease;
    }
    .preview-item:hover {
      transform: translateY(-3px);
    }
    .remove-btn {
      position: absolute;
      top: .5rem;
      left: .5rem;
      background: rgba(255,0,0,0.8);
      color: #fff;
      border: none;
      border-radius: 50%;
      width: 25px;
      height: 25px;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity .3s ease;
      cursor: pointer;
    }
    .preview-item:hover .remove-btn {
      opacity: 1;
    }
    .clear-all-btn {
      background: #FF4444;
      color: #fff;
      border: none;
      padding: .5rem 1rem;
      border-radius: var(--radius);
      cursor: pointer;
      margin-top: var(--gutter);
      float: left;
    }

    /* Submit */
    .submit-btn {
      background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
      color: var(--white-color);
      padding: calc(var(--gutter) * .75) var(--gutter);
      border: none;
      border-radius: 50px;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
      display: block;
      width: 100%;
      position: relative;
      overflow: hidden;
    }
    .submit-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0,113,227,0.3);
    }
    .submit-btn::after {
      content: "→";
      position: absolute;
      left: var(--gutter);
      transition: var(--transition);
    }
    .submit-btn:hover::after {
      left: calc(var(--gutter) + .5rem);
    }

    /* Header Styles */
.l-header {
    position: fixed;
    top: 0;
    width: 100%;
    background-color: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    z-index: 1000;
}

/* Nav container */
.nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
}

/* Logo */
.nav__logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-color);
}

/* Links list */
.nav__list {
    display: flex;
    gap: 2rem;
    margin: 0;
    padding: 0;
    list-style: none;
}

/* Individual link */
.nav__link {
    color: var(--text-color);
    font-weight: 500;
    transition: var(--transition);
    text-decoration: none;
}
.nav__link:hover {
    color: var(--secondary-color);
}

/* Action button */
.nav__btn {
    background-color: var(--secondary-color);
    color: white;
    padding: 0.5rem 1.5rem;
    border-radius: 50px;
    font-weight: 500;
    transition: var(--transition);
    text-decoration: none;
}
.nav__btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 113, 227, 0.3);
}

/* Mobile toggle button (hidden desktop) */
.nav__toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
}
.nav__toggle span {
    display: block;
    width: 25px;
    height: 3px;
    background-color: var(--primary-color);
    margin: 5px 0;
    transition: var(--transition);
}

/* Responsive menu wrapper */
.nav__menu {
    display: flex;
    align-items: center;
    gap: 2rem;
    transition: var(--transition);
}
@media (max-width: 768px) {
    .nav__toggle {
        display: block;
    }
    .nav__menu {
        width: 100%;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease-out;
        order: 3;
    }
    .nav__list {
        flex-direction: column;
        gap: 1rem;
        padding: 1rem 0;
        text-align: center;
    }
    .nav__menu.active {
        max-height: 500px;
    }
    .nav__toggle.active span:nth-child(1) {
        transform: rotate(45deg) translate(5px, 5px);
    }
    .nav__toggle.active span:nth-child(2) {
        opacity: 0;
    }
    .nav__toggle.active span:nth-child(3) {
        transform: rotate(-45deg) translate(7px, -6px);
    }
}


    /* Responsive */
    @media (max-width: 768px) {
      .booking-section { padding: var(--section-padding) .75rem; }
      .booking-container { margin: var(--gutter) .5rem; }
      .booking-header h2 { font-size: 2rem; }
      .form-control { padding: .75rem; }
    }
  </style>
</head>
<body>

  <!-- HEADER -->
<header class="l-header">
    <nav class="nav">
        <a href="/" class="nav__logo">Kobe Land</a>

        <button class="nav__toggle" aria-label="Toggle navigation">
            <span></span>
            <span></span>
            <span></span>
        </button>

        <div class="nav__menu">
            <ul class="nav__list">
                <li class="nav__item"><a href="/" class="nav__link">الرئيسية</a></li>
                <li class="nav__item"><a href="/#modern-section" class="nav__link">من نحن</a></li>
            </ul>
        </div>

        
    </nav>
    
</header>


  <section class="booking-section">
    
    <div class="booking-container">
     
      <div class="booking-header">
        <h2>تعبئة نموذج الحجز</h2>
        <p>املأ النموذج التالي وسنتواصل معك خلال 24 ساعة</p>
      </div>

      <form method="post" class="booking-form" enctype="multipart/form-data" >
        <!-- الاسم -->
        <div class="form-group floating-label-group">
          <input name="name" type="text" class="form-control" id="name" placeholder=" " required>
          <label class="floating-label" for="name">الاسم الكامل *</label>
        </div>

        <!-- الهاتف (عراقي) -->
        <div class="form-group">
    <label class="form-label"  for="phone">رقم هاتف العميل *</label>
    <div class="phone-input-group">
        <span class= "country-code">+964</span>
        <input name="mobile" 
               type="tel" 
               class="form-control" 
               pattern="[0-9]{10}" 
               maxlength="10" 
               minlength="10"
               title="يجب إدخال 10 أرقام بدون المقدمة الدولية"
               placeholder="7xxxxxxxxx" 
               required
               style="border-radius: 0 0.5rem 0.5rem 0; margin-bottom: 0;">
    </div>
</div>

         <!-- المحافظة -->
        <div class="form-group">
          <label class="form-label" for="governorate">المحافظة *</label>
          <div class="select-wrapper">
            <select name="city" class="form-control" id="governorate" required>
              <option value="" disabled selected hidden>جاري تحميل المحافظات...</option>
            </select>
          </div>
        </div>

        <!-- المنطقة -->
        <div class="form-group">
          <label class="form-label" for="region">المنطقة *</label>
          <div class="select-wrapper">
            <select name="region" class="form-control" id="region" required disabled>
              <option value="" disabled selected hidden>اختر المحافظة أولاً</option>
            </select>
          </div>
        </div>

        

        <!-- أقرب نقطة دالة -->
        <div class="form-group floating-label-group">
          <input name="nearestPoint" type="text" class="form-control" id="landmark" placeholder=" " required>
          <label class="floating-label" for="landmark">أقرب نقطة دالة *</label>
        </div>

        <!-- ملاحظات -->
        <div class="form-group">
          <label class="form-label" for="notes">ملاحظات إضافية (اختياري)</label>
          <textarea name="note" class="form-control" id="notes" placeholder="أي تفاصيل إضافية تريد إضافتها..."></textarea>
        </div>

        <!-- رفع الصور -->
        <div class="form-group">
          <label class="form-label">رفع الصور (غير محدود)</label>
          <div class="file-section" id="drop-zone">
            <input name="images" type="file" id="file-input" multiple accept="image/*" hidden>
            <label for="file-input" class="file-input-label">
              <div class="upload-icon">📤</div>
              <span>اسحب وأفلت الصور أو انقر للاختيار</span>
            </label>
            <div class="preview-grid" id="preview-container"></div>
            <button type="button" class="clear-all-btn" onclick="clearAllFiles()">حذف الكل</button>
          </div>
        </div>

        <button type="submit" class="submit-btn">إرسال الطلب</button>
      </form>
    </div>
  </section>

  <script>
  function decodeUnicode(str) {
      return str.replace(/\\u([\dA-F]{4})/gi,
        (_, code) => String.fromCharCode(parseInt(code, 16)));
    }

    document.addEventListener('DOMContentLoaded', () => {
      const governorateSelect = document.getElementById('governorate');
      const regionSelect      = document.getElementById('region');

      // 1. جلب المحافظات
      fetch("/api/cities")
        .then(res => res.text())          // تحويل الرد إلى نص
        .then(text => JSON.parse(text))   // تحويل النص إلى JSON
        .then(json => {
          if (!json.status) throw new Error(json.msg || 'فشل في جلب المحافظات');
          // إعادة تهيئة القائمة
          governorateSelect.innerHTML = '<option value="" disabled selected hidden>اختر المحافظة</option>';
          // تعبئة الخيارات
          json.data.forEach(city => {
            const opt = document.createElement('option');
            opt.value       = city.id;
            opt.textContent = decodeUnicode(city.city_name);
            governorateSelect.appendChild(opt);
          });
          // تفعيل القائمة
          governorateSelect.disabled = false;
        })
        .catch(err => {
          console.error("حدث خطأ أثناء جلب المحافظات:", err);
          governorateSelect.innerHTML = '<option value="" disabled selected>تعذّر تحميل المحافظات</option>';
        });

      // 2. جلب المناطق عند اختيار محافظة
      governorateSelect.addEventListener('change', () => {
        const cityId = governorateSelect.value;
        // إعادة تهيئة قائمة المناطق
        regionSelect.innerHTML = '<option value="" disabled selected hidden>جاري تحميل المناطق...</option>';
        regionSelect.disabled = true;

        fetch(`/api/regions?city_id=${cityId}`)
          .then(res => res.text())
          .then(text => JSON.parse(text))
          .then(json => {
            if (!json.status) throw new Error(json.msg || 'فشل في جلب المناطق');
            regionSelect.innerHTML = '<option value="" disabled selected hidden>اختر المنطقة</option>';
            json.data.forEach(region => {
              const opt = document.createElement('option');
              opt.value       = region.id;
              opt.textContent = decodeUnicode(region.region_name);
              regionSelect.appendChild(opt);
            });
            regionSelect.disabled = false;
          })
          .catch(err => {
            console.error("حدث خطأ أثناء جلب المناطق:", err);
            regionSelect.innerHTML = '<option value="" disabled selected>تعذّر تحميل المناطق</option>';
          });
      });
    });


    document.querySelector('.booking-form').addEventListener('submit', async function(e) {
  e.preventDefault();

  const form = this;
  const btn = form.querySelector('.submit-btn');
  btn.disabled = true; // تعطيل الزر لتجنب الإرسال المتكرر

  const formData = new FormData(form);

  try {
    const response = await fetch('/orders', {
      method: 'POST',
      body: formData
    });

    if (response.ok) {
      Swal.fire({
        icon: 'success',
        title: 'تم بنجاح!',
        text: 'تم استلام طلبك بنجاح، سنقوم بالتواصل معك خلال 24 ساعة',
        confirmButtonText: 'حسناً'
      });
      form.reset();
      clearAllFiles();
    } else {
      throw new Error('فشل في الإرسال');
    }
  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: 'خطأ!',
      text: 'حدث خطأ أثناء الإرسال: ' + error.message,
      confirmButtonText: 'حسناً'
    });
  } finally {
    btn.disabled = false; // إعادة تفعيل الزر بعد انتهاء العملية
    btn.style.transform = 'scale(0.95)';
    setTimeout(() => btn.style.transform = 'scale(1)', 200);
  }
});

   

    // File upload logic
    const dropZone = document.getElementById('drop-zone');
    const fileInput = document.getElementById('file-input');
    const previewContainer = document.getElementById('preview-container');
    let filesArray = [];

    dropZone.addEventListener('dragover', e => {
      e.preventDefault();
      dropZone.style.borderColor = 'var(--secondary-color)';
    });
    dropZone.addEventListener('dragleave', () => {
      dropZone.style.borderColor = '#E0E0E0';
    });
    dropZone.addEventListener('drop', e => {
      e.preventDefault();
      dropZone.style.borderColor = '#E0E0E0';
      handleFiles(e.dataTransfer.files);
    });
    fileInput.addEventListener('change', e => handleFiles(e.target.files));

    function handleFiles(files) {
      for (const file of files) {
        if (!file.type.startsWith('image/')) continue;
        filesArray.push(file);
        previewFile(file);
      }
    }
    function previewFile(file) {
      const reader = new FileReader();
      reader.onload = e => {
        const idx = filesArray.indexOf(file);
        const item = document.createElement('div');
        item.className = 'preview-item';
        item.innerHTML = `
          <img src="${e.target.result}" class="preview-image">
          <button type="button" class="remove-btn" onclick="removeFile(${idx})">×</button>
        `;
        previewContainer.appendChild(item);
      };
      reader.readAsDataURL(file);
    }
    function removeFile(i) {
      filesArray.splice(i,1);
      previewContainer.children[i].remove();
      updateRemoveBtns();
    }
    function clearAllFiles() {
      filesArray = [];
      previewContainer.innerHTML = '';
    }
    function updateRemoveBtns() {
      document.querySelectorAll('.remove-btn').forEach((btn, i) => {
        btn.setAttribute('onclick', `removeFile(${i})`);
      });
    }


    // عناصر التoggle والقائمة
const navToggle = document.querySelector('.nav__toggle');
const navMenu   = document.querySelector('.nav__menu');

// عند النقر على أيقونة التoggle
navToggle.addEventListener('click', () => {
    navMenu.classList.toggle('active');
    navToggle.classList.toggle('active');
});

// إغلاق القائمة عند النقر على أي رابط
document.querySelectorAll('.nav__link').forEach(link => {
    link.addEventListener('click', () => {
        navMenu.classList.remove('active');
        navToggle.classList.remove('active');
    });
});
    // إغلاق القائمة عند النقر في أي مكان آخر
    document.addEventListener('click', (event) => {
        if (!navMenu.contains(event.target) && !navToggle.contains(event.target)) {
            navMenu.classList.remove('active');
            navToggle.classList.remove('active');
        }
    });


  </script>
</body>
</html>
